% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layout.R
\name{contentPanel}
\alias{contentPanel}
\title{Create a content panel}
\usage{
contentPanel(..., padding = 10, scrollable = TRUE)
}
\arguments{
\item{...}{UI objects to be contained in the \code{contentPanel}. A single
htmlwidget or \code{\link[shiny]{plotOutput}} with \code{height="100\%"}
works well, as do
\code{\link[shiny]{fillRow}}/\code{\link[shiny]{fillCol}}.}

\item{padding}{Amount of padding to apply. Can be numeric (in pixels) or
character (e.g. \code{"3em"}).}

\item{scrollable}{If \code{TRUE}, then content large enough to overflow the
\code{contentPanel} will make scrollbars appear.}
}
\description{
Creates a panel for containing arbitrary content within a flex box container.
This is mainly useful within \code{\link{gadgetPage}} or a
\code{\link{tabstripPanel}}'s \code{\link[shiny]{tabPanel}}. You can use
\code{contentPanel} to introduce padding and/or scrolling, but even if
padding/scrolling aren't needed, it's a good idea to wrap your custom content
into \code{contentPanel} as it fixes some odd behavior with percentage-based
heights.
}

